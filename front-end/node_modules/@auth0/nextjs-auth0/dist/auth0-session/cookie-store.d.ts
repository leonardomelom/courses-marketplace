/// <reference types="node" />
import { IncomingMessage, ServerResponse } from 'http';
import * as jose from 'jose';
import { Cookies } from './utils/cookies';
import { Config } from './config';
declare type Header = {
    iat: number;
    uat: number;
    exp: number;
};
export default class CookieStore<Req = IncomingMessage, Res = ServerResponse> {
    private config;
    private Cookies;
    private keys?;
    private chunkSize;
    constructor(config: Config, Cookies: new () => Cookies);
    private getKeys;
    encrypt(payload: jose.JWTPayload, { iat, uat, exp }: Header): Promise<string>;
    private decrypt;
    private calculateExp;
    read(req: Req): Promise<[{
        [key: string]: any;
    }?, number?]>;
    save(req: Req, res: Res, session: {
        [key: string]: any;
    } | undefined | null, createdAt?: number): Promise<void>;
}
export {};
//# sourceMappingURL=cookie-store.d.ts.map